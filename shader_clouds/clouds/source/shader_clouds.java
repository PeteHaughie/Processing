/* autogenerated by Processing revision 1293 on 2024-05-08 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class shader_clouds extends PApplet {

PShader myShader;

PGraphics buffer;

int w = 320;
int h = 240;

public void setup() {
    //size(320, 240, P2D);
    /* size commented out by preprocessor */;
    myShader = loadShader("shader.glsl");
    myShader.set("iResolution", (float) w, (float) h);
    buffer = createGraphics(w, h, P2D);
}

public void updateBuffer() {
  buffer.beginDraw();
  buffer.filter(myShader);
  buffer.endDraw();
}

public float returnSine(float val, float max) {
  float r = map(sin(radians(val)), -1, 1, 0, max);
  return r;
}

public void draw() {
  frameRate(30);
  updateBuffer();
  myShader.set("iMouse", returnSine(frameCount * 0.1f, w), returnSine(frameCount * 0.05f, h));
  myShader.set("iTime", (float) millis() / 1000);
  image(buffer, 0, 0, width, height);
}


  public void settings() { fullScreen(P2D); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "shader_clouds" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
